제어구조 : 제어문(실행흐름)

메모리 할당 : 값을 담는 공간(메모리) 를 마련하는 것
메모리 할당 방법 2가지 : 정적할당(미리 정해놓은 것), 동적할당(실행중에 마련하는 것)
			변수				

자바는 코드가 실행되기 전에 변수가 미리 메모리 할당(정적)되고 그 뒤에 실행됨
자바에서는 정수,실수,불린은 new연산자로 메모리 할당하는 것(동적)을 못하게 만듬.

변수의 두가지 종류
값변수 : 값을 저장하는 변수(공간이 있음), 기본 형식만 값 변수로 사용할 수 있음 
	정수, 실수 등등 ex) int x;
참조변수 : 값을 저장하지 못하는 변수(공간이 없음) 
	건물이라고 생각하자. 이름으로만 지칭한다. 
	참조변수는 동적으로 만들어야 한다(new 연산자) ex) FileInputStream fis;

inputstream 또는 outputstream 객체들은 자바 플랫폼의 버퍼를 사용하고,
자바 플랫폼은 운영체제의 버퍼를 사용하게 신청을 해둔다. 그를 통해 하드디스크를 활용 한다.
신청을 해둔 상태에서 그냥 두면 운영체제 입장에서는 그 자원을 계속 두게된다.
이런것을 방지하기 위해서 .close()를 수행하여 리소스를 닫아야 한다.

fos.write();가 하드디스크에 적용되는 경우 3가지
1.버퍼가 가득 찼을때.
2.flush() 함수를 사용했을때.
3.프로그램이 끝날때 버퍼의 자원을 수거함

############# 나머지연산(%)는 회귀형 연산에 사용된다. ex)%13이면 0~12 반복########