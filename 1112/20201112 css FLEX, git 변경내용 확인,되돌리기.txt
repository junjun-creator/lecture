CSS
background: #313131 url(../img/bg-visual.png) no-repeat center;
repeat >> 화면의 크기에따라 이미지보다 큰 배경을 채워야 할 경우 반복해서 나오게 할 것인지 설정(repeat-xy가 default)
background-size를 통해서 배경이미지의 크기조절 가능
	>> contain(배경이미지가 모두 박스 안으로 들어감(빈공간 신경안쓰고 너비 높이 폭을 박스에 맞춤)
	>> cover(박스보다 크기가 오버되더라도 박스 내부를 꽉 채움)

박스 안에 컨텐츠 내용이 박스 보다 커서 배밖으로 나오는 경우, overflow 속성으로 설정가능하다.
이때, 스크롤을 통해 컨텐츠를 다룰 경우, 그 박스의 배경 이미지가 스크롤을 따라가게 할수도, 제자리에 고정되게 할 수 도 있다.
>> 이 기능을 background-attachment로 설정 가능하다
	(scroll>default로 스크롤을 따라다님, 
	fixed>배경을 고정시킴(화면 기준). 박스보다 이미지가 클 경우 스크롤하면 박스는 고정이지만 이미지가 보여지는 위치가 달라짐
	local>박스 내부에 설정한 위치에 고정시키고 스크롤해도 따라오지 않음)

배경이미지를 입힐때는 박스의 영역이 가변일 경우 해당 박스가 아닌 그것을 감싸고잇는 방에 설정해주는게 좋음

padding옵션을 사용할때 주의사항
>> 박스 사이징을 잘 해줘야한다. 안그러면 배경이미지가 패딩과 함께 따라오는 경우가 생긴다.
	(padding을 하면서 사이즈가 달라지는 현상이 발생함)
	padding을 줫을때 컨텐츠 영역의 사이즈는 유지한 채로 padding을 위한 공간을 바깥으로 늘려버림.
	(flex 레이아웃의 성질 자체가 빈공간을 박스들이 나눠서 쓰는 형식이라 한쪽에서 padding으로 인해 영역이 증가하면 한쪽이 감소됨)
	> 즉, 이럴때 box-sizing:border-box;로 설정을하면 박스의 크기를 border영역으로 설정하고, 컨텐츠영역을 줄이면서 padding을 넣음

flex의 주요 목적 : 아이템들을 수평으로 정렬하고자 할때
block요소 > display:flex;
inline요소 > display:inline-flex;
(기존의 디스플레이 속성 다 무시)flex 아이템의 height : , width : 컨텐츠 크기

flex-grow: 여백이 있는만큼 아이템을 키울 수 있음 >> 1(빈공백 모두 사용>> 여백을 등분하는 비율)

.container>div:nth-child(1){       //pseudo-class(element) 1부터 시작
    background-color: lawngreen;
}

여백이 없는경우에 flex 속성이 적용된 박스에 너비값(width)... 마치 최대값처럼 사용됨!
flex-basis:200px; >> 200px로 너비값을 설정 하되, 여건에 맞춰서 여건이 될 경우 200px 안될경우 축소시킴
flex-shrink:3; >> 축소(쪼그라듬) 옵션. 값이 배율임. 해당 박스에 설정하는경우 이 배율로 축소시킴(0을주면 안줄어들겟다~)
	>> flex-shrink:0으로 설정해두면 축소가 되지 않음 - min-width와 같은 역할을 하게됨 하지만 flex 속성을 사용하면 shrink를 사용하자

basis로 박스의 기본 너비를 설정한 뒤, grow를 통해 여백을 모두 채운경우, 여백이 더 생겨서 박스의 basis너비보다 넓어지면 더 키우고,
shrink:0을 설정한 경우 basis너비를 기준으로 더이상 축소되지 않음.

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

git
변화된 내용을 확인할때 : diff(unstaged)
$ git diff --staged css/flex.css >> staging 된 후에 변화된 내용 확인할때

but,,,, 이미 사진을 찍어버린 후에는?(commit 후에)
$ git show css/flex.css

staging한 것을 취소할때, 파일만 unstaged 하게 하려면 rm,
수정된 내용을 되돌릴 때는 restore
"git restore --staged <file>..." /// staged 된 상태를 restore함.
"git restore <file>..." /// modifed 된 상태를 restore 함.

COMMIT 취소 3가지 방법 - 내일
