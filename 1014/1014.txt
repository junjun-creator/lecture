final 변수는 상수를 만들기 위해 사용
final class는 마지막 자식을 만들때 사용. 더이상 확장 불가능.

클래스 범위는 실행영역이 아니라, 정의 영역이다.
변수의 선언은 실행영역에서만 선언이라고 하는데, 클래스 범위에서(메소드밖에서) 변수를 선언하는 것이 static 이다.
----------------------------------------------------------------------------------------------------------------------------------

1. 클래스를 고쳐 쓸수는 있는데, 어떤 것을 고쳐 쓸지는 아무도 모른다.(약속되어있지 않은 상태에서 고쳐 쓸 경우)
2. 내가 가지고 있는 클래스인데 다른사람이 이것을 상속받지 않더라도 고쳐 쓸수 있게끔 해줄까?(약속 된 상태)
		- 다른 사람이 내가 작성한 로직을 바꿔서 사용하고 싶지 않을까?
		- 약속을 정의 해놓고 이 약속을 원하는대로 고쳐서 쓰라고 놔두면 되겟지
		- 그게 interface 이다.
		- 인터페이스로 원하는 기능을 선언해두고, impl(구현)은 사용할 누군가가 하게끔 놔두고,
		- 그 기능을 사용할 때 set 하면 된다.
	-interface는 약속만을 두게끔 제한한다.(변수선언 등 로직을 구현할 수 없음)

기존의 mouseDown은 추상클래스를 사용하여 고쳐 쓰는방식
>> addMouseListener() 를 통해 인터페이스방식으로 구현을 해볼것임

인터페이스 => 객체를 사용할 때 그 객체가 가지는 메소드가 있을 때 그 메소드의 일부를 외부 클래스에게 위임하는 도구
절차와 절차를 연결시켜주는 역할. (이코드를 저 코드에 꽂아 넣는다)
다른코드에서 어떤 코드의 시점을 알고 싶을때가 있지 않을까?
(예를들면, 캐릭터가 어떤 위치에 도착했을때, 백그라운드 화면이 이동하게 하고싶다! >> 어떤위치라고 하는 시점을 캔버스가 알아야한다!)
즉 인터페이스 구현은 사용하는 쪽인 캔버스가 구현해야한다.