어떤 기능의 구현체는? 함수이다.
함수는 사용과 구현을 구분하고있다.(분리)
인터페이스는 함수로 구현되어 있다.(0) 함수는 인터페이스이다(X)
함수는 도구로서 재사용이 가능한 집중화 특성을 갖고있다. 
이렇게 자주 사용하는 함수들을 라이브러리로 생성할 수 있다.

문자열 : 문자들의 열 : 'h', 'e', 'l', 'l', 'o', 'h', 'i' 문자열의 갯수를 식별하기 어렵다. ==> 식별자 '\0' 존재
"hello" "hi"
문자열은 값으로 보지 않는다. -> 문자열은 도구로 본다.
문자열은 객체입니다. 객체는 도구이며 도구는 new를 통해서 만들게 되어있다.
그러한 도구들은 모두 기능을 함수로 내장하고 있다.
String x = new String("hello");
But, 너무 자주 사용되므로 이렇게 매번 쓰기에는 사용이 불편하다.
그래서 마치 값처럼 사용하는 가벼운 도구처럼
String x = "hello";로 만들수 있다(번역기가 알아서 객체 생성)
"hello" 자체가 방이다(공간, new를 통해 만듬) >> 즉 x는 참조변수이다.(무언가를 담는 값변수가 아니다)
String 객체는 자바 언어에서 제공하는 기능 함수이다.(API가 아니다)

기존에는 stream을 직접 객체생성하여 사용하였는데,
이제는 직접 사용하는 것이 아니고 stream을 대신 사용해줄 Scanner를 사용할 것이다.
Scanner를 이용해서 stream을 간접적으로 사용한다.
stream을 직접 사용하게 되면 txt의 내용을 숫자코드로 읽어오고, 1바이트씩 가져오는 번거로움이 있다.
Scanner를 이용하면 문자코드를 그대로 가져오면서, 여러바이트를 한번에(문자열) 가져올수 있는 장점이 있다.

next() : 스페이스 또는 엔터를 만날 때 까지 읽어온다.(엔터는 문자로 인식하지 않는다.)
nextLine() : 엔터를 만날 때 까지 읽어온다.(엔터도 문자로 인식한다.)