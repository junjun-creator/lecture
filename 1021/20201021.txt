1교시 미사일

문제점
1. 미사일은 프레임 밖으로 나가도 안사라짐
2. 스페이스 누르고 잇으면 미사일 계속 생성
3. 미사일 속도
4. 미사일이 일정 텀을 두고 발사되야하는데 계속 나옴

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

2교시 컬렉션
반복자(Iterator)는 무엇이고 왜 사용하는가?
다중 스레드 환경에서 동일한 컬렉션을 사용하게된다면, 동일한 index를 이용하고 변화시키기때문에 문제가 발생한다.

이 문제를 해결하기 위해 iterator를 사용한다. 인덱스를 공유하지않고 따로하도록.

그렇게 만들려면 객체를 따로 생성 해야하는데, 문제는 우리가 index만 가지고 모든 일을 할 수 있는것이 아니라, size, list도 필요하다.
그러면 매번 생성자로 만들어줘야하는데, 우린 이걸 방지하기 위해서 innerClass를 활용 할 것이다.(클래스 내부에 클래스)
그럼 innerClass의 객체는 어떻게 생성을 할 것인가?
innerClass는 this가 2개이다.(innerClass 를 감싸고 있는 클래스의 this와 inner의 this)
그래서 객체를 생성하기 위해서는, 바깥쪽의 클래스를 객체로 만들고 그 객체를 통해서 생성해야한다.
ObjectList.ObjectIterator it = list.new ObjectIterator(); 이렇게 생성해야한다. list라는 인스턴스를 생성하고 
그 인스턴스 내부의 innerClass를 만들어야한다.

for문과 와일문의 단점을 극복하기 위해 foreach문이 생성됨
foreach문을 사용하기 위해서는 list가 iterator 인터페이스를 구현하고 있어야함.
(이터레이터를 구현하는 과정에서 문제가 생겨서 제네릭이 등장함)