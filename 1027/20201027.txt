소켓
서버측에서 line으로 읽고 있으면 보내는 클라이언트쪽에서도 println으로 보내줘야한다...(왜? 잘모르겟어)

사용자가 접속햇는지만(소켓 정보만) 알고싶을때(사용자의 정보가 없더라도) > 소켓 accept 하자마자 전송해주면 됨
사용자의 정보를 알리고 싶을때 > 접속자 정보와 텍스트 메시지를 구분할 줄 알아야함

캔버스 정보, 메시지 정보, 사용자 정보 3가지를 구별해서 모두 전송할 수 있어야 함.

3가지 정보를 구분하기 위하여 serialization(줄세우기) 해야함

모든 데이터를 한번에 보낼 수는 없다.
무엇을 먼저 보낼 것인지, 보내는 것들을 어떻게 구분 할 것인지? >> 이것을 위해 serialization

ObjectOutputStream >> serialization 된 애들만 보낼 수 있음(but, Java 끼리만)
ObjectOutputStream로 보낸 데이터를 읽을때도 처리를 해줘야함. 그냥 String으로 읽을 수 없음 >>>> 얜 안씀

범용적 serialization 방식 3가지

CVS(굉장히 심플, but 쉼표로 구분하기때문에 쉼표가 포함된 문자열에는 구분자로 사용 불가)
XML(태그와 데이터로 구분)
JSON(key, value로 구성)

JSON
값 형식이 없고, 참조형식만 존재함
실행중에 참조를 생성함(동적)
참조이기 때문에 참조하는 모든 것은 객체여야 함
but, new연산자로 객체를 생성하지 않음 >> autoBoxing